#
# Cluster related variables
#

# The repo you created from this template
# e.g. https://github.com/k8s-at-home/home-cluster
export BOOTSTRAP_GIT_REPOSITORY="https://github.com/evanja/fluxcluster"

# Optional: Enable GitHub to send a webhook to update Flux, set the following to one of:
# ignored - this feature will be disabled
# generated - this will generate a token and print it in the logs
# Set this to any other string and it will be used for the secret
export BOOTSTRAP_FLUX_GITHUB_WEBHOOK_SECRET="ignored"

# Choose one of your cloudflare domains
# e.g. k8s-at-home.com
export BOOTSTRAP_CLOUDFLARE_DOMAIN="eja.net.au"
# The email you use to sign into Cloudflare with
export BOOTSTRAP_CLOUDFLARE_EMAIL="evan@eja.net.au"
# Your global Cloudflare API Key
export BOOTSTRAP_CLOUDFLARE_APIKEY="bad4c31aeba9675c5aea14c8e9822d63"

# Pick a range of unused IPs that are on the same network as your nodes
# You don't need many IPs, just choose 10 IPs to start with
# e.g. 192.168.1.220-192.168.1.230
export BOOTSTRAP_METALLB_LB_RANGE="10.0.50.51-10.0.50.80"
# The load balancer IP for k8s_gateway, choose from one of the available IPs above
# e.g. 192.168.1.220
export BOOTSTRAP_METALLB_K8S_GATEWAY_ADDR="10.0.50.45"
# The load balancer IP for the ingress controller, choose from one of the available IPs above
# that doesn't conflict with any other IP addresses here
# e.g. 192.168.1.221
export BOOTSTRAP_METALLB_INGRESS_ADDR="10.0.50.50"

# Age Public Key - string should start with age
# e.g. age15uzrw396e67z9wdzsxzdk7ka0g2gr3l460e0slaea563zll3hdfqwqxdta
export BOOTSTRAP_AGE_PUBLIC_KEY=""


# Enable / Disable kube-vip
# If this is set to false (e.g. on a cluster with a single-node control plane), do not install kube-vip.
# BOOTSTRAP_KUBE_VIP_ADDR needs to be set to the IP the API Server is reachable under
export BOOTSTRAP_KUBE_VIP_ENABLED="true"
# The IP Address to use with kube-vip
# Pick a unused IP that is on the same network as your nodes
# and outside the ${BOOTSTRAP_METALLB_LB_RANGE} range
# and doesn't conflict with any other IP addresses here
# e.g. 192.168.1.254
export BOOTSTRAP_KUBE_VIP_ADDR="10.0.50.40"

# Choose your timezone
# Used to set your systems timezone
# and Kured timezone
# e.g. America/New_York
export BOOTSTRAP_TIMEZONE="Australia/Brisbane"

#
# Ansible related variables
#

#
# Default prefixes for hostnames assigned by Ansible
# These are unused on nodes where BOOTSTRAP_ANSIBLE_HOSTNAME_ is provided
#

export BOOTSTRAP_ANSIBLE_DEFAULT_CONTROL_NODE_HOSTNAME_PREFIX="kube-"
export BOOTSTRAP_ANSIBLE_DEFAULT_NODE_HOSTNAME_PREFIX="kube-"

#
# Ansible hosts - repeat this block as many times as you need,
# incrementing the last digit on the variable name for each node
#

# Host IP Address to the control plane node
# That doesn't conflict with any other IP addresses here
# e.g. 192.168.1.200
export BOOTSTRAP_ANSIBLE_HOST_ADDR_0="10.0.50.20"
# User Ansible will log into the nodes
export BOOTSTRAP_ANSIBLE_SSH_USERNAME_0="console"
# Password Ansible will use to escalate to sudo
export BOOTSTRAP_ANSIBLE_SUDO_PASSWORD_0="l1nuxC0nsole"
# Set this node as a control node (true/false)
export BOOTSTRAP_ANSIBLE_CONTROL_NODE_0="true"
# Optional: Set the hostname of the node, if set this will override the *_HOSTNAME_PREFIX vars above
export BOOTSTRAP_ANSIBLE_HOSTNAME_0="kube-master1"

# export BOOTSTRAP_ANSIBLE_HOST_ADDR_1=""
# export BOOTSTRAP_ANSIBLE_SSH_USERNAME_1=""
# export BOOTSTRAP_ANSIBLE_SUDO_PASSWORD_1=""
# export BOOTSTRAP_ANSIBLE_CONTROL_NODE_1=""
# export BOOTSTRAP_ANSIBLE_HOSTNAME_1=""

# export BOOTSTRAP_ANSIBLE_HOST_ADDR_2=""
# export BOOTSTRAP_ANSIBLE_SSH_USERNAME_2=""
# export BOOTSTRAP_ANSIBLE_SUDO_PASSWORD_2=""
# export BOOTSTRAP_ANSIBLE_CONTROL_NODE_2=""
# export BOOTSTRAP_ANSIBLE_HOSTNAME_2=""
